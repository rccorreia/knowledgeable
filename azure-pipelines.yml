# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
    - master

variables:
    # Azure Resource Manager connection created during pipeline creation
    azureSubscription: "b6e80c49-0439-49c0-b5da-73b651f4ce9b"

    # Function app name
    functionAppName: "knowledgeable"

    # Agent VM image name
    vmImageName: "mcr.microsoft.com/dotnet/core/sdk:3.1-alpine"

    # Working Directory
    workingDirectory: "$(System.DefaultWorkingDirectory)/src/knowledgeable"

stages:
    - stage: Build
      displayName: Build stage

      jobs:
          - job: Build
            displayName: Build
            pool:
                vmImage: $(vmImageName)

            steps:
                - task: DotNetCoreCLI@2
                  displayName: Build
                  inputs:
                      command: "build"
                      projects: |
                          $(workingDirectory)/*.csproj
                      arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

                - task: ArchiveFiles@2
                  displayName: "Archive files"
                  inputs:
                      rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output"
                      includeRootFolder: false
                      archiveType: zip
                      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
                      replaceExistingArchive: true

                - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
                  artifact: drop

    - stage: Deploy
      displayName: Deploy stage
      dependsOn: Build
      condition: succeeded()

      jobs:
          - deployment: Deploy
            displayName: Deploy
            environment: "development"
            pool:
                vmImage: $(vmImageName)

            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: AzureFunctionApp@1
                              displayName: "Azure functions app deploy"
                              inputs:
                                  azureSubscription: "$(azureSubscription)"
                                  appType: functionApp
                                  appName: $(functionAppName)
                                  package: "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"
